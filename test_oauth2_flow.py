#!/usr/bin/env python3
"""
Script de prueba para el flujo OAuth2 mejorado de PAN AMERICAN LIFE DE ECUADOR
"""

import time
import logging
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.edge.options import Options
from selenium.common.exceptions import TimeoutException

# Configurar logging
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

def test_oauth2_flow():
    """Prueba el flujo OAuth2 completo"""
    
    # Configurar Edge
    edge_options = Options()
    # edge_options.add_argument("--headless")  # Comentar para ver el navegador
    edge_options.add_argument("--no-sandbox")
    edge_options.add_argument("--disable-dev-shm-usage")
    edge_options.add_argument("--window-size=1920,1080")
    edge_options.add_argument("--user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0")
    
    driver = None
    try:
        logger.info("üöÄ Iniciando prueba del flujo OAuth2...")
        
        # Crear driver
        driver = webdriver.Edge(options=edge_options)
        driver.set_page_load_timeout(30)
        
        # URL de login
        url_login = "https://attest.palig.com/as/authorization.oauth2?client_id=cf7770f3699048ca9c61358b4dff25f5&redirect_uri=https%3A%2F%2Fbenefitsdirect.palig.com%2FInicio%2FLogin.aspx&response_type=code%20id_token&scope=openid%20profile%20email%20phone&state=OpenIdConnect.AuthenticationProperties%3DEXT82eDzm70H4FnxSn_OSRdC0ztASLp7Bvg8yLL52IEtIBpUyjD0IgIAK2j3eotEFyvMduisG7lsrN_jS47FwqP1Ye8RmSvSCWGJztHD53DbYlBg6Si-9zzt_8Efapm7-7fpkkxkUMhcPLmiLc54y6uQoA-d6uJ9jwBtbN00C1RguGixAAIRtMHyLWPVpBEQPpVPzS-6duAbBzUrsj9DrHDwEUlLYKM_XwLKtTN2C3kFXgQ6w5TVEjc7erJO16I1mxb4sAur-MV7SQAJNVbSg0smGa8JTlVV37t3I2zgvVeE1c44Hp4R72C9ivX23Ai0&response_mode=form_post&nonce=638918216386869899.ODZmNTA2ZDQtZDIwZi00MTE0LTk1NjItMjI0YWFlYzMyNzQ4MGE5YjVhOTgtMzNjNS00NDBmLTllMjAtYzg0NDY2MDkwNDc5&x-client-SKU=ID_NET451&x-client-ver=5.6.0.0"
        
        logger.info(f"üåê Navegando a: {url_login}")
        driver.get(url_login)
        
        # Esperar a que cargue la p√°gina
        WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.TAG_NAME, "body"))
        )
        logger.info("‚úÖ P√°gina de login cargada")
        
        # Llenar campos de login
        logger.info("üîê Llenando campos de login...")
        
        # Campo de contrase√±a
        campo_password = WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.CSS_SELECTOR, "#password"))
        )
        campo_password.clear()
        campo_password.send_keys("Mediglobal1")
        logger.info("‚úÖ Campo contrase√±a completado")
        
        # Campo de usuario
        campo_username = WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.CSS_SELECTOR, "#username"))
        )
        campo_username.clear()
        campo_username.send_keys("conveniosyseguros@mediglobal.com.ec")
        logger.info("‚úÖ Campo usuario completado")
        
        # Hacer clic en el bot√≥n de login
        boton_login = WebDriverWait(driver, 10).until(
            EC.element_to_be_clickable((By.CSS_SELECTOR, 'a[title="Inicio de sesi√≥n"]'))
        )
        boton_login.click()
        logger.info("‚úÖ Bot√≥n de login clickeado")
        
        # üöÄ ESPERAR A QUE SE COMPLETE LA REDIRECCI√ìN OAUTH2
        logger.info("‚è≥ Esperando a que se complete la redirecci√≥n OAuth2...")
        
        # Variable para controlar reintentos de login
        intentos_login = 0
        max_intentos_login = 2
        
        # Esperar hasta que llegue a la p√°gina final (m√°ximo 120 segundos)
        for intento in range(1, 41):  # 40 intentos * 3 segundos = 120 segundos
            time.sleep(3)
            
            url_actual = driver.current_url
            titulo_actual = driver.title
            
            logger.info(f"   ‚è≥ Intento {intento}/40 - URL: {url_actual[:80]}...")
            logger.info(f"      T√≠tulo: {titulo_actual}")
            
            # üîç DETECTAR SI VOLVIMOS AL LOGIN Y REINTENTAR
            if "authorization.oauth2" in url_actual and intentos_login < max_intentos_login:
                intentos_login += 1
                logger.warning(f"üîÑ ¬°VOLVIMOS AL LOGIN! (Intento {intentos_login}/{max_intentos_login})")
                logger.info("üîÑ Reintentando login...")
                
                try:
                    # Esperar a que se recargue la p√°gina
                    time.sleep(2)
                    
                    # Llenar campos de login nuevamente
                    logger.info("üîê Reintentando login - llenando campos...")
                    
                    # Campo de contrase√±a
                    campo_password = WebDriverWait(driver, 10).until(
                        EC.presence_of_element_located((By.CSS_SELECTOR, "#password"))
                    )
                    campo_password.clear()
                    campo_password.send_keys("Mediglobal1")
                    logger.info("‚úÖ Campo contrase√±a completado (reintento)")
                    
                    # Campo de usuario
                    campo_username = WebDriverWait(driver, 10).until(
                        EC.presence_of_element_located((By.CSS_SELECTOR, "#username"))
                    )
                    campo_username.clear()
                    campo_username.send_keys("conveniosyseguros@mediglobal.com.ec")
                    logger.info("‚úÖ Campo usuario completado (reintento)")
                    
                    # Hacer clic en el bot√≥n de login nuevamente
                    boton_login = WebDriverWait(driver, 10).until(
                        EC.element_to_be_clickable((By.CSS_SELECTOR, 'a[title="Inicio de sesi√≥n"]'))
                    )
                    boton_login.click()
                    logger.info("‚úÖ Bot√≥n de login clickeado (reintento)")
                    
                    # Continuar con el siguiente intento
                    continue
                    
                except Exception as e:
                    logger.error(f"‚ùå Error en reintento de login: {e}")
                    if intentos_login >= max_intentos_login:
                        logger.error("‚ùå M√°ximo de reintentos de login alcanzado")
                        break
            
            # Verificar si llegamos a la p√°gina final de beneficios
            if "benefitsdirect.palig.com" in url_actual:
                logger.info(f"‚úÖ ¬°Primera redirecci√≥n detectada en intento {intento}!")
                logger.info(f"   üéØ P√°gina intermedia alcanzada: {url_actual}")
                
                # Esperar m√°s tiempo para que se complete la segunda redirecci√≥n
                logger.info("‚è≥ Esperando segunda redirecci√≥n a MisPolizasPVR.aspx...")
                for intento2 in range(1, 21):  # Esperar 60 segundos m√°s
                    time.sleep(3)
                    url_actual2 = driver.current_url
                    titulo_actual2 = driver.title
                    
                    logger.info(f"      ‚è≥ Intento 2.{intento2}/20 - URL: {url_actual2[:80]}...")
                    logger.info(f"         T√≠tulo: {titulo_actual2}")
                    
                    # Verificar si llegamos a la p√°gina final
                    if "MisPolizasPVR.aspx" in url_actual2:
                        logger.info(f"üéØ ¬°Redirecci√≥n OAuth2 COMPLETAMENTE terminada en intento 2.{intento2}!")
                        logger.info(f"   üéØ P√°gina final alcanzada: {url_actual2}")
                        break
                
                break
            
            # Verificar si estamos en la p√°gina de autorizaci√≥n.ping (estado intermedio)
            if "authorization.ping" in url_actual:
                logger.info(f"üîÑ Estado intermedio OAuth2 detectado en intento {intento}")
                logger.info(f"   üìç P√°gina de autorizaci√≥n.ping: {url_actual}")
                logger.info("   ‚è≥ Esperando continuaci√≥n del flujo OAuth2...")
                
                # Verificar si hay alg√∫n bot√≥n o enlace para continuar
                try:
                    # Buscar botones o enlaces que puedan continuar el flujo
                    botones_continuar = driver.find_elements(By.CSS_SELECTOR, 
                        'button, input[type="submit"], a, [role="button"], .btn, .button')
                    
                    if botones_continuar:
                        logger.info(f"üîç Encontrados {len(botones_continuar)} elementos clickeables")
                        for i, boton in enumerate(botones_continuar[:3]):  # Mostrar solo los primeros 3
                            texto = boton.text.strip() or boton.get_attribute('value') or 'sin-texto'
                            logger.info(f"   {i+1}. {boton.tag_name} - Texto: '{texto}'")
                        
                        # Intentar hacer clic en el primer bot√≥n visible
                        for boton in botones_continuar:
                            try:
                                if boton.is_displayed() and boton.is_enabled():
                                    logger.info(f"üéØ Intentando hacer clic en bot√≥n: {boton.tag_name} - '{boton.text.strip()}'")
                                    boton.click()
                                    logger.info("‚úÖ Clic ejecutado, esperando redirecci√≥n...")
                                    time.sleep(3)  # Esperar a que se procese
                                    break
                            except Exception as e:
                                logger.info(f"‚ö†Ô∏è No se pudo hacer clic en bot√≥n: {e}")
                                continue
                    else:
                        logger.info("‚ÑπÔ∏è No se encontraron elementos clickeables en la p√°gina de autorizaci√≥n.ping")
                        
                except Exception as e:
                    logger.info(f"‚ÑπÔ∏è Error buscando elementos clickeables: {e}")
                
                # Continuar esperando, no salir del bucle
            
            # Verificar si hay alg√∫n error
            try:
                errores = driver.find_elements(By.CSS_SELECTOR, '.error, .alert, .message, [class*="error"], [class*="alert"]')
                if errores:
                    for error in errores[:2]:
                        texto = error.text.strip()
                        if texto:
                            logger.warning(f"‚ö†Ô∏è Error detectado: {texto}")
                            
                            # Si hay error de autenticaci√≥n, considerar reintento
                            if any(palabra in texto.lower() for palabra in ['invalid', 'incorrect', 'failed', 'error', 'incorrecto', 'invalido', 'fallido']):
                                logger.warning("‚ö†Ô∏è Error de autenticaci√≥n detectado - considerando reintento")
            except:
                pass
        
        # Verificar URL final
        url_final = driver.current_url
        titulo_final = driver.title
        
        logger.info(f"‚úÖ Redirecci√≥n OAuth2 completada!")
        logger.info(f"   üìç URL final: {url_final}")
        logger.info(f"   üìÑ T√≠tulo final: {titulo_final}")
        
        # Verificar si llegamos a la p√°gina correcta
        if "benefitsdirect.palig.com" in url_final:
            logger.info("üéØ ¬°P√°gina de beneficios alcanzada correctamente!")
            
            # Navegar a la p√°gina de b√∫squeda si no estamos ya ah√≠
            if "MisPolizasPVR.aspx" not in url_final:
                logger.info("üîÑ Navegando a la p√°gina de b√∫squeda...")
                url_busqueda = "https://benefitsdirect.palig.com/Inicio/Contenido/InfoAsegurado/MisPolizasPVR.aspx"
                driver.get(url_busqueda)
                time.sleep(5)
                
                url_despues_navegacion = driver.current_url
                if "MisPolizasPVR.aspx" in url_despues_navegacion:
                    logger.info("‚úÖ P√°gina de b√∫squeda cargada exitosamente")
                else:
                    logger.warning("‚ö†Ô∏è No se pudo cargar la p√°gina de b√∫squeda")
            else:
                logger.info("‚úÖ Ya estamos en la p√°gina de b√∫squeda correcta")
            
            # Probar b√∫squeda
            logger.info("üîç Probando b√∫squeda...")
            try:
                # Buscar campo de b√∫squeda
                campo_busqueda = WebDriverWait(driver, 10).until(
                    EC.presence_of_element_located((By.CSS_SELECTOR, 'input[type="text"], input[placeholder*="documento"], input[name*="documento"]'))
                )
                
                # Llenar con un n√∫mero de documento de prueba
                numero_prueba = "1234567890"
                campo_busqueda.clear()
                campo_busqueda.send_keys(numero_prueba)
                logger.info(f"‚úÖ Campo de b√∫squeda llenado con: {numero_prueba}")
                
                # Buscar bot√≥n de b√∫squeda
                boton_buscar = WebDriverWait(driver, 10).until(
                    EC.element_to_be_clickable((By.CSS_SELECTOR, 'button[type="submit"], input[type="submit"], .btn-primary, .btn-buscar'))
                )
                boton_buscar.click()
                logger.info("‚úÖ Bot√≥n de b√∫squeda clickeado")
                
                # Esperar resultados
                time.sleep(5)
                logger.info("‚úÖ B√∫squeda completada")
                
            except Exception as e:
                logger.warning(f"‚ö†Ô∏è No se pudo completar la b√∫squeda: {e}")
                
        else:
            logger.warning("‚ö†Ô∏è No se lleg√≥ a la p√°gina de beneficios esperada")
            logger.info("üîÑ Intentando navegar manualmente...")
            
            try:
                url_beneficios = "https://benefitsdirect.palig.com/Inicio/Contenido/InfoAsegurado/MisPolizasPVR.aspx"
                driver.get(url_beneficios)
                time.sleep(5)
                
                if "MisPolizasPVR.aspx" in driver.current_url:
                    logger.info("‚úÖ P√°gina de beneficios alcanzada manualmente")
                else:
                    logger.error("‚ùå No se pudo alcanzar la p√°gina de beneficios")
            except Exception as e:
                logger.error(f"‚ùå Error en navegaci√≥n manual: {e}")
        
        logger.info("üéØ Prueba del flujo OAuth2 completada")
        logger.info(f"üìä Resumen de reintentos de login: {intentos_login}/{max_intentos_login}")
        
    except Exception as e:
        logger.error(f"‚ùå Error en la prueba: {e}")
        
    finally:
        if driver:
            logger.info("üîå Cerrando navegador...")
            driver.quit()

if __name__ == "__main__":
    test_oauth2_flow()
